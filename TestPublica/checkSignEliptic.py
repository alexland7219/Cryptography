from ecpy.curves     import Curve,Point
from ecpy.keys       import ECPublicKey, ECPrivateKey
from ecpy.ecdsa      import ECDSA

cv   = Curve.get_curve('secp521r1')

# Public key
P = (183746701883757124826755524715142517173684662596382931014900106779410231692051781676595944589173697763631191386590655544007103631661168945042439908049126628, 
     1601281877710170848847338512967691812903583180826685392300517340541208413570012609627603954169927449316111853622325474586718412581245331911174500642483080471)

hash_doc = 5572218363369325710622755349080158642966138912594496268137619782031501993116570169733490485653610033368823165157382759353621377017869899053722083617134315051
#Signatura
F = (636209411702914270661152765691119681822202526214190888223313780804486620649417809538075073320536552396577393606651565148805816715408423177786550261549407061,
            5665944802029951168612385975560511149978964867796618009229554554695039618868560857058585498994051253971070241725582009074416192241470619741064412300461145432)

pu_key = ECPublicKey(Point(P[0], P[1], cv))

Q = Point(P[0], P[1], cv)

q = cv.order

w1 = (hash_doc * pow(F[1], -1, q)) % q
w2 = (F[0] * pow(F[1], -1, q)) % q

E =  cv.add_point(w1 * cv.generator, w2 * Q)

print("Valid Signture: ", end="")
print(E.x % q == F[0] % q)
