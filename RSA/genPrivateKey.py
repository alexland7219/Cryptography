import sympy as sp
from Crypto.PublicKey import RSA
import base64
from Crypto.Cipher import PKCS1_OAEP

# Copy the two primes after factorization
p = 139293737990082102180249982841077966526456913086251139663683167666772729362290520557109091867194860795287172725446829991725791538016295799289623403786137111223872333576040110576596153126818186548512101539959617127289683706644809404302577549211270428450181719163361567524174024942466354127954451324510252359207
q = 154287700522508413718149071592487008478849776836563920401532678091205232286675130297834675740593802133326398317425210047921533633323444760180977079948220114239805814161164335493657082617036494141693581489915000091537962446431129773650227180940398237123662509641514445822339079563065993677099228144781237877021

N = p*q

phi_N = (p-1)*(q-1)
e = 2**16 + 1

d = int(sp.gcdex(e, phi_N)[0]) % phi_N

print(e*d % phi_N)

rsa_key = RSA.construct((N, e, d, p, q))
pk = rsa_key.export_key()
pk = pk.decode("utf-8")

with open("alexandre.ros.roger_SK.pem", "w") as f:
    f.write(pk)


